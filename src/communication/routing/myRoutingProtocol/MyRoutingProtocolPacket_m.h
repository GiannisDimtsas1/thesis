//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/communication/routing/myRoutingProtocol/MyRoutingProtocolPacket.msg.
//

#ifndef _MYROUTINGPROTOCOLPACKET_M_H_
#define _MYROUTINGPROTOCOLPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "RoutingPacket_m.h"
// }}

/**
 * Enum generated from <tt>src/node/communication/routing/myRoutingProtocol/MyRoutingProtocolPacket.msg:7</tt> by nedtool.
 * <pre>
 * enum MyRoutingProtocolPacketDef
 * {
 * 
 *     MY_ROUTING_ADV_PACKET = 1;
 *     MY_ROUTING_JOIN_PACKET = 2;
 *     MY_ROUTING_TDMA_PACKET = 3;
 *     MY_ROUTING_DATA_PACKET = 4;
 * 
 * }
 * </pre>
 */
enum MyRoutingProtocolPacketDef {
    MY_ROUTING_ADV_PACKET = 1,
    MY_ROUTING_JOIN_PACKET = 2,
    MY_ROUTING_TDMA_PACKET = 3,
    MY_ROUTING_DATA_PACKET = 4
};

/**
 * Class generated from <tt>src/node/communication/routing/myRoutingProtocol/MyRoutingProtocolPacket.msg:15</tt> by nedtool.
 * <pre>
 * packet MyRoutingProtocolPacket extends RoutingPacket
 * {
 *     int MyRoutingProtocolPacketKind @enum(MyRoutingProtocolPacketDef);
 *     int schedule[];
 * }
 * </pre>
 */
class MyRoutingProtocolPacket : public ::RoutingPacket
{
  protected:
    int MyRoutingProtocolPacketKind_var;
    int *schedule_var; // array ptr
    unsigned int schedule_arraysize;

  private:
    void copy(const MyRoutingProtocolPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MyRoutingProtocolPacket&);

  public:
    MyRoutingProtocolPacket(const char *name=NULL, int kind=0);
    MyRoutingProtocolPacket(const MyRoutingProtocolPacket& other);
    virtual ~MyRoutingProtocolPacket();
    MyRoutingProtocolPacket& operator=(const MyRoutingProtocolPacket& other);
    virtual MyRoutingProtocolPacket *dup() const {return new MyRoutingProtocolPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getMyRoutingProtocolPacketKind() const;
    virtual void setMyRoutingProtocolPacketKind(int MyRoutingProtocolPacketKind);
    virtual void setScheduleArraySize(unsigned int size);
    virtual unsigned int getScheduleArraySize() const;
    virtual int getSchedule(unsigned int k) const;
    virtual void setSchedule(unsigned int k, int schedule);
};

inline void doPacking(cCommBuffer *b, MyRoutingProtocolPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MyRoutingProtocolPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _MYROUTINGPROTOCOLPACKET_M_H_

